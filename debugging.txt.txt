For the debugging, i used the unit test that we do in the second assignment to check the dominion.c 
after runing the test, i find there are two bugs

the first one i find is in the card smithy function which called function_renamed_smithy

In this function, the code in dominion.c shows(line 1327-1330)

for (i = 0; i < 2; i++)
	{
	  drawCard(currentPlayer, state);
	} 
however, the smithy should add 3 cards so it should be i<3 instead of i<2

Another bug i find is in the card council_room which called function_renamed_council_room

in this function , the code in dominion.c shows(line 1295-1298)
for (i = 0; i < 3; i++)
	{
	  drawCard(currentPlayer, state);
	}
however, the council_room should add 4 cards so it should be i<4 instead of i<3

After runing the unit test, i use the random test in assignment 3and 4 to check  the dominion.c
however, i don't find specific bug.

The Agans’principles applied to	the process:
(1)Understand the system: 
At first, it is very important to understand how this game works. 
The understand the game rules is necessary to figure out where might have a bug.
For example, the bugs i make in first assignemnt is change the times of draw card in card function
if we don't understand game rule, we will not find the bug like this.

(2)Make it fail:
it is important to locate where might have a bug.

(3)Quit thinking and look:
Based on the test result, it shows the where exist the error. 
Fix the bug after locating base on the data of testing. 
  
