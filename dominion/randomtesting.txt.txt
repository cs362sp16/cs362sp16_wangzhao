assignment3

wang,zhaoheng

The card i choose to write random test are adventurer, smithy and village. For each card, i first check the function in
the dominion.c. For example, the adventurer will only give two cards which means the number of the card on hand(before use the card) will be less than 
the number of the card on hand(after use the card). Similarly, the smithy will add three cards and the village will add 1 card and two action.
In the test, i check some function and if there is a error, it will get the numbers of the error and print out to the output file
For instance, set r equal to the initialize function and check the value of r. If r is not correct, then add 1 to the num(which use to get the total error numbers)
Similar for the effect function.Besides, i also check the number of the card on hand(before use the card) and the number of the card on hand(after use the card)    
Furthermore, village will add two action so i check the number of action (before use the card) and the number of action (after use the card)

base on the results of test, 
randomtestadventurer.out shows:
File 'dominion.c'
Lines executed:24.01% of 558
Creating 'dominion.c.gcov'

the coverage of smithy is 100%. 
the randomtestcard1.out shows:
Function 'function_renamed_smithy'
Lines executed:100.00% of 5
Branches executed:100.00% of 2
Taken at least once:100.00% of 2
Calls executed:100.00% of 2

randomtestcard2.out shows:
File 'dominion.c'
Lines executed:20.25% of 558
Creating 'dominion.c.gcov'

i set 100 times for test loop and i feel the random test will have higher coverage than the unit test becase it almost cover check all conditions(by using random variable) for the card that we want to test.
however, the unit test will not use random variable and it might check some specific case inside of random case. As a result, the unit test may not have the higher than the random test. 
i think the random test will have better fault detection capability because it almost test all the possibility of the case